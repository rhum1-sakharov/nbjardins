<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet id="202012121823-4" author="rvl" >
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="clients"></tableExists>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE `clients` (
            `ID` VARCHAR(50) NOT NULL ,
            `NOM` VARCHAR(50) NOT NULL ,
            `PRENOM` VARCHAR(50) NOT NULL ,
            `EMAIL` VARCHAR(50) NOT NULL ,
            `TELEPHONE` INT(10) NULL DEFAULT NULL,
            `ADRESSE` VARCHAR(50) NULL DEFAULT NULL ,
            `CODEPOSTAL` VARCHAR(50) NULL DEFAULT NULL ,
            `VILLE` VARCHAR(50) NULL DEFAULT NULL ,
            `FONCTION` VARCHAR(50) NULL DEFAULT NULL ,
            `SOCIETE` VARCHAR(50) NULL DEFAULT NULL ,
            PRIMARY KEY (`ID`) USING BTREE,
            UNIQUE INDEX `unique_email_idx` (`EMAIL`) USING BTREE
            )
            COLLATE='utf8_general_ci'
            ENGINE=InnoDB
            ;
        </sql>
        <comment>
            Creation de la table clients
        </comment>
    </changeSet>

    <changeSet id="202012160955" author="rvl" >
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="clients"></tableExists>
        </preConditions>
        <sql>
            RENAME TABLE clients TO personnes
        </sql>
        <comment>
            Renommer la table clients en personnes
        </comment>
    </changeSet>

    <changeSet id="202012160956" author="rvl" >
        <preConditions onFail="MARK_RAN">
            <columnExists tableName="personnes" columnName="TELEPHONE"></columnExists>
        </preConditions>
        <sql>
            ALTER TABLE `personnes`
            CHANGE COLUMN `TELEPHONE` `TELEPHONE` VARCHAR(10) NULL DEFAULT NULL AFTER `EMAIL`;
        </sql>
        <comment>
            La colonne telephone doit être un VARCHAR dans la table personnes
        </comment>
    </changeSet>

    <changeSet id="202012160959" author="rvl" >
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="roles"></tableExists>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE `roles` (
            `ID` VARCHAR(50) NOT NULL,
            `NOM` VARCHAR(50) NOT NULL,
            `DESCRIPTION` VARCHAR(50) NOT NULL,
            PRIMARY KEY (`ID`),
            UNIQUE INDEX `unique_nom_idx` (`NOM`)
            )
            COLLATE='utf8_general_ci'
            ;
        </sql>
        <comment>
           Creer la table roles
        </comment>
    </changeSet>


    <changeSet id="202012161007" author="rvl" >
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="personnes__roles"></tableExists>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE `personnes__roles` (
            `ID` VARCHAR(50) NOT NULL,
            `ID_PERSONNE` VARCHAR(50) NOT NULL,
            `ID_ROLE` VARCHAR(50) NOT NULL,
            PRIMARY KEY (`ID`),
            UNIQUE INDEX `unique_personne_role_idx` (`ID_PERSONNE`, `ID_ROLE`),
            INDEX `ID_PERSONNE` (`ID_PERSONNE`),
            INDEX `ID_ROLE` (`ID_ROLE`),
            CONSTRAINT `FK__pr__personnes` FOREIGN KEY (`ID_PERSONNE`) REFERENCES `personnes` (`ID`) ON UPDATE CASCADE ON DELETE CASCADE,
            CONSTRAINT `FK__pr__roles` FOREIGN KEY (`ID_ROLE`) REFERENCES `roles` (`ID`) ON UPDATE CASCADE ON DELETE RESTRICT
            )
            COLLATE='utf8_general_ci'
            ;

        </sql>
        <comment>
            Creer la table personnes__roles
        </comment>
    </changeSet>

    <changeSet id="202012161045" author="rvl" >
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="demandes_de_devis"></tableExists>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE demandes_de_devis
            (
            ID varchar(50) PRIMARY KEY NOT NULL,
            ID_ASKER varchar(50) NOT NULL,
            ID_WORKER varchar(50) NOT NULL,
            SUJET VARCHAR(50) NOT NULL,
            MESSAGE VARCHAR(500) NOT NULL,
            CONSTRAINT fk__dd__askerpersonne FOREIGN KEY (ID_ASKER) REFERENCES personnes (ID) ON DELETE CASCADE ON UPDATE CASCADE,
            CONSTRAINT fk__dd__workerpersonne FOREIGN KEY (ID_WORKER) REFERENCES personnes (ID) ON DELETE CASCADE ON UPDATE CASCADE
            )
            COLLATE='utf8_general_ci'
            ;
        </sql>
        <comment>
            Creer la table demandes_de_devis
        </comment>
    </changeSet>

    <changeSet id="202012161051" author="rvl" runAlways="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from roles where nom='ROLE_ARTISAN'</sqlCheck>
        </preConditions>
        <sql>
            INSERT INTO `roles` (`ID`, `NOM`, `DESCRIPTION`) VALUES ('1', 'ROLE_ARTISAN', 'Artisan');
        </sql>
        <comment>
            Ajouter le role ROLE_ARTISAN s'il n'existe pas
        </comment>
    </changeSet>

    <changeSet id="202012161055" author="rvl" runAlways="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from roles where nom='ROLE_CLIENT'</sqlCheck>
        </preConditions>
        <sql>
            INSERT INTO `roles` (`ID`, `NOM`, `DESCRIPTION`) VALUES ('2', 'ROLE_CLIENT', 'Client');
        </sql>
        <comment>
            Ajouter le role ROLE_CLIENT s'il n'existe pas
        </comment>
    </changeSet>

    <changeSet id="202012161056-1" author="rvl" runAlways="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from personnes where email='rvermo3402@gmail.com'</sqlCheck>
        </preConditions>
        <sql>
            INSERT INTO `personnes` (`ID`, `NOM`, `PRENOM`, `EMAIL`, `TELEPHONE`, `ADRESSE`, `CODEPOSTAL`, `VILLE`, `FONCTION`, `SOCIETE`) VALUES ('08747d89-0c85-492b-b71a-cb6d244a9a00', 'BOETSCH', 'NICOLAS', 'rvermo3402@gmail.com', '061234567', '366, chemin des castanes', '84210', 'Pernes les Fontaines', 'Jardinier', 'Les jardins de Nicolas');
        </sql>
        <comment>
            Ajouter l'artisan nb
        </comment>
    </changeSet>

    <changeSet id="202012161056-2" author="rvl" runAlways="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from personnes__roles where ID='5c5e43b3-6ce5-4578-921a-d4eb5ce6f9d9'</sqlCheck>
        </preConditions>
        <sql>
            INSERT INTO `personnes__roles` (`ID`, `ID_PERSONNE`, `ID_ROLE`) VALUES ('5c5e43b3-6ce5-4578-921a-d4eb5ce6f9d9', '08747d89-0c85-492b-b71a-cb6d244a9a00', '1');
        </sql>
        <comment>
            Ajouter l'artisan nb
        </comment>
    </changeSet>

    <changeSet id="202012161206" author="rvl" >
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="applications"></tableExists>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE `applications` (
            `ID` VARCHAR(50) NOT NULL DEFAULT '',
            `ID_WORKER` VARCHAR(50) NOT NULL,
            `NOM` VARCHAR(50) NOT NULL,
            `TOKEN` VARCHAR(50) NOT NULL,
            PRIMARY KEY (`ID`),
            INDEX `ID_WORKER` (`ID_WORKER`),
            UNIQUE INDEX `unique_ID_WORKER_idx` (`ID_WORKER`),
            UNIQUE INDEX `unique_TOKEN_idx` (`TOKEN`),
            CONSTRAINT `FK__applications__personnes` FOREIGN KEY (`ID_WORKER`) REFERENCES `personnes` (`ID`) ON UPDATE CASCADE ON DELETE CASCADE
            )
            COLLATE='utf8_general_ci'
            ;
        </sql>
        <comment>
           Créer la table applications
        </comment>
    </changeSet>

    <changeSet id="202012161227-1" author="rvl" runAlways="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from applications where token='NB_JARDINS'</sqlCheck>
        </preConditions>
        <sql>
            INSERT INTO `applications` (`ID`, `ID_WORKER`, `NOM`, `TOKEN`) VALUES ('0f2e86da-9c25-4695-b0c5-c3d5a1e47729', '08747d89-0c85-492b-b71a-cb6d244a9a00', 'Les jardins de Nicolas', 'NB_JARDINS');
        </sql>
        <comment>
            Ajouter l'application NB_JARDINS
        </comment>
    </changeSet>


</databaseChangeLog>
